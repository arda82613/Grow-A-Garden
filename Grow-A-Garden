--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.9) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then local v79=0;while true do if (v79==0) then v19=v0(v3(v30,1,1));return "";end end else local v80=v2(v0(v30,16));if v19 then local v90=v5(v80,v19);v19=nil;return v90;else return v80;end end end);local function v20(v31,v32,v33) if v33 then local v81=(v31/((929 -(214 + 713))^(v32-(1 + 0))))%((5 -3)^(((v33-(2 -1)) -(v32-(1 -0))) + ((8 -6) -(118 -(32 + 85))))) ;return v81-(v81%(620 -(555 + 64))) ;else local v82=(933 -(857 + 74))^(v32-(1066 -(68 + 997))) ;return (((v31%(v82 + v82))>=v82) and 1) or ((557 + 11) -(367 + 201)) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + 1 + 1 );v18=v18 + (959 -(892 + 65)) ;return (v36 * 256) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + 3 );v18=v18 + 4 ;return (v40 * (31011612 -14234396)) + (v39 * 65536) + (v38 * (610 -354)) + v37 ;end local function v24() local v41=350 -(87 + 263) ;local v42;local v43;local v44;local v45;local v46;local v47;while true do if (v41==0) then v42=v23();v43=v23();v41=181 -(67 + 113) ;end if (v41==(3 + 0)) then if (v46==(0 -0)) then if (v45==((0 -0) + 0)) then return v47 * (0 -0) ;else local v106=952 -(802 + (588 -(145 + 293))) ;while true do if (v106==(0 -0)) then v46=1;v44=0 -0 ;break;end end end elseif (v46==(1490 + 557)) then return ((v45==(997 -(915 + 82))) and (v47 * ((2 -1)/(0 + 0)))) or (v47 * NaN) ;end return v8(v47,v46-(1344 -321) ) * (v44 + (v45/((1189 -(1069 + 118))^(117 -(495 -(44 + 386)))))) ;end if (v41==((1489 -(998 + 488)) -(1 + 0))) then v46=v20(v43,21,5 + 1 + 25 );v47=((v20(v43,56 -24 )==((773 -(201 + 571)) + 0)) and  -1) or (792 -(368 + 423)) ;v41=9 -6 ;end if (v41==(19 -(10 + 8))) then v44=3 -2 ;v45=(v20(v43,1139 -(116 + 1022) ,462 -(416 + (108 -82)) ) * ((6 -4)^32)) + v42 ;v41=1 + 1 + 0 ;end end end local function v25(v48) local v49=0 -0 ;local v50;local v51;while true do if (v49==1) then v50=v3(v16,v18,(v18 + v48) -(3 -2) );v18=v18 + v48 ;v49=2;end if ((862 -(814 + 45))==v49) then return v6(v51);end if (v49==(0 -0)) then v50=nil;if  not v48 then v48=v23();if (v48==((1423 -(630 + 793)) + 0)) then return "";end end v49=1 + 0 ;end if (v49==(887 -(261 + 624))) then v51={};for v91=1 -(0 -0) , #v50 do v51[v91]=v2(v1(v3(v50,v91,v91)));end v49=1083 -(1020 + 60) ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return 0 + 0 ;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();while true do if (v52~=2) then else for v93= #"}",v23() do local v94=(function() return v21();end)();if (v20(v94, #"}", #"{")==(166 -(9 + 157))) then local v101=(function() return 0 -0 ;end)();local v102=(function() return;end)();local v103=(function() return;end)();local v104=(function() return;end)();local v105=(function() return;end)();while true do if (v101~=(1824 -(1195 + 629))) then else local v107=(function() return 0 -0 ;end)();while true do if (v107==(242 -(187 + 54))) then v101=(function() return 781 -(162 + 618) ;end)();break;end if (v107==0) then v102=(function() return 0;end)();v103=(function() return nil;end)();v107=(function() return 1 + 0 ;end)();end end end if (v101==1) then v104=(function() return nil;end)();v105=(function() return nil;end)();v101=(function() return 2;end)();end if ((2 + 0)==v101) then while true do if (v102== #"}") then local v114=(function() return 0 -0 ;end)();local v115=(function() return;end)();while true do if (v114==0) then v115=(function() return 0;end)();while true do if ((0 -0)==v115) then v105=(function() return {v22(),v22(),nil,nil};end)();if (v103==(1636 -(1373 + 263))) then local v456=(function() return 0;end)();local v457=(function() return;end)();while true do if (v456~=0) then else v457=(function() return 1000 -(451 + 549) ;end)();while true do if ((0 + 0)~=v457) then else v105[ #"19("]=(function() return v22();end)();v105[ #"?id="]=(function() return v22();end)();break;end end break;end end elseif (v103== #">") then v105[ #"nil"]=(function() return v23();end)();elseif (v103==2) then v105[ #"19("]=(function() return v23() -((2 -0)^(26 -10)) ;end)();elseif (v103== #"xxx") then local v525=(function() return 0;end)();local v526=(function() return;end)();while true do if (v525~=(1384 -(746 + 638))) then else v526=(function() return 0;end)();while true do if (v526==(0 + 0)) then v105[ #"gha"]=(function() return v23() -(2^(23 -7)) ;end)();v105[ #"0313"]=(function() return v22();end)();break;end end break;end end end v115=(function() return 1;end)();end if (v115==1) then v102=(function() return 343 -(218 + 123) ;end)();break;end end break;end end end if (v102==(1581 -(1535 + 46))) then local v116=(function() return 0 + 0 ;end)();local v117=(function() return;end)();while true do if ((0 + 0)~=v116) then else v117=(function() return 560 -(306 + 254) ;end)();while true do if (v117==(1 + 0)) then v102=(function() return  #" ";end)();break;end if (v117==0) then v103=(function() return v20(v94,3 -1 , #"-19");end)();v104=(function() return v20(v94, #".com",1473 -(899 + 568) );end)();v117=(function() return 1 + 0 ;end)();end end break;end end end if (v102~= #"-19") then else if (v20(v104, #"xxx", #"91(")== #"|") then v105[ #"asd1"]=(function() return v58[v105[ #"xnxx"]];end)();end v53[v93]=(function() return v105;end)();break;end if (v102~=2) then else local v119=(function() return 0 -0 ;end)();local v120=(function() return;end)();while true do if (v119==(603 -(268 + 335))) then v120=(function() return 290 -(60 + 230) ;end)();while true do if (v120==1) then v102=(function() return  #"-19";end)();break;end if (v120==0) then if (v20(v104, #" ", #"]")== #"}") then v105[2]=(function() return v58[v105[2]];end)();end if (v20(v104,2,574 -(426 + 146) )== #"/") then v105[ #"91("]=(function() return v58[v105[ #"xnx"]];end)();end v120=(function() return 1;end)();end end break;end end end end break;end end end end for v95= #" ",v23() do v54[v95-#"!" ]=(function() return v28();end)();end return v56;end if (v52~=(0 + 0)) then else local v86=(function() return 0;end)();local v87=(function() return;end)();while true do if (0~=v86) then else v87=(function() return 0;end)();while true do if (v87==0) then v53=(function() return {};end)();v54=(function() return {};end)();v87=(function() return 1;end)();end if (v87~=(1457 -(282 + 1174))) then else v55=(function() return {};end)();v56=(function() return {v53,v54,nil,v55};end)();v87=(function() return 5 -3 ;end)();end if (v87~=2) then else v52=(function() return  #"]";end)();break;end end break;end end end if ( #"["==v52) then local v88=(function() return 0 + 0 ;end)();local v89=(function() return;end)();while true do if ((1024 -(706 + 318))~=v88) then else v89=(function() return 0;end)();while true do if (2~=v89) then else v52=(function() return 2;end)();break;end if ((1251 -(721 + 530))==v89) then v57=(function() return v23();end)();v58=(function() return {};end)();v89=(function() return 1;end)();end if (v89~=(1272 -(945 + 326))) then else for v109= #"{",v57 do local v110=(function() return 0;end)();local v111=(function() return;end)();local v112=(function() return;end)();local v113=(function() return;end)();while true do if (v110==1) then v113=(function() return nil;end)();while true do if (v111==(2 -1)) then if (v112== #"{") then v113=(function() return v21()~=0 ;end)();elseif (v112==(2 + 0)) then v113=(function() return v24();end)();elseif (v112== #"xxx") then v113=(function() return v25();end)();end v58[v109]=(function() return v113;end)();break;end if (v111==(700 -(271 + 429))) then local v145=(function() return 0 + 0 ;end)();while true do if (v145~=(1500 -(1408 + 92))) then else local v414=(function() return 1086 -(461 + 625) ;end)();while true do if ((1288 -(993 + 295))~=v414) then else v112=(function() return v21();end)();v113=(function() return nil;end)();v414=(function() return 1;end)();end if ((1 + 0)==v414) then v145=(function() return 1172 -(418 + 753) ;end)();break;end end end if (1~=v145) then else v111=(function() return 1 + 0 ;end)();break;end end end end break;end if (v110==0) then v111=(function() return 0 + 0 ;end)();v112=(function() return nil;end)();v110=(function() return 1 + 0 ;end)();end end end v56[ #"nil"]=(function() return v21();end)();v89=(function() return 2;end)();end end break;end end end end end local function v29(v59,v60,v61) local v62=v59[1 + (0 -0) ];local v63=v59[531 -(406 + 123) ];local v64=v59[3];return function(...) local v65=v62;local v66=v63;local v67=v64;local v68=v27;local v69=1770 -(1749 + 20) ;local v70= -(1 + 0);local v71={};local v72={...};local v73=v12("#",...) -1 ;local v74={};local v75={};for v83=1322 -((2438 -(442 + 747)) + 73) ,v73 do if (v83>=v67) then v71[v83-v67 ]=v72[v83 + 1 + 0 ];else v75[v83]=v72[v83 + (1146 -(466 + 679)) ];end end local v76=(v73-v67) + (2 -1) ;local v77;local v78;while true do v77=v65[v69];v78=v77[2 -1 ];if ((4726>2407) and (v78<=(1192 -(832 + 303)))) then if ((v78<=(974 -(88 + 858))) or (1284>3669)) then if ((1117<2549) and (v78<=((584 + 1329) -(106 + (2479 -(314 + 371)))))) then if (v78<=(2 + (13 -9))) then if (v78<=(1 + 1 + 0)) then if ((v78<=(0 + 0)) or (2851>4774)) then v75[v77[(1177 -(786 + 386)) -(1 + 2) ]][v77[7 -4 ]]=v75[v77[118 -(4 + 110) ]];elseif (v78==(585 -((1436 -(1055 + 324)) + 527))) then v75[v77[1429 -(41 + 1386) ]]=v75[v77[106 -(17 + 86) ]] + v77[4] ;else v75[v77[2]]=v75[v77[3 + 0 ]] -v77[(797 -(766 + 23)) -4 ] ;end elseif (v78<=4) then if ((1031<3848) and (v78==(8 -(24 -19)))) then if ((1854>903) and v75[v77[2]]) then v69=v69 + (167 -(122 + 44)) ;else v69=v77[5 -2 ];end else v75[v77[(1346 -(1093 + 247)) -4 ]]=v75[v77[3 + 0 ]][v77[1 + 3 ]];end elseif ((v78>(10 -5)) or (453>1537)) then if (v77[(91 -24) -(30 + 35) ]<v75[v77[3 + 1 ]]) then v69=v69 + ((3314 -2056) -(1043 + 214)) ;else v69=v77[11 -8 ];end elseif ((4663>1860) and (4492>1913) and (v77[1214 -(323 + 889) ]==v75[v77[10 -6 ]])) then v69=v69 + 1 ;else v69=v77[583 -(361 + 219) ];end elseif (v78<=(329 -(53 + 267))) then if ((v78<=(2 + 0 + 5)) or (3053<=469)) then do return;end elseif (v78==(421 -(15 + 398))) then v75[v77[1 + 1 ]]=v75[v77[985 -(18 + (3271 -2307)) ]];else local v152=v77[7 -5 ];v75[v152](v13(v75,v152 + 1 + 0 ,v70));end elseif (v78<=(7 + 4)) then if (v78>(39 -29)) then if (((2550>=876) and (v77[852 -(20 + 830) ]==v75[v77[(13 -9) + 0 ]])) or (540>=1869)) then v69=v69 + (127 -(116 + 10)) ;else v69=v77[1 + 2 ];end else local v153=738 -(542 + 196) ;local v154;local v155;local v156;while true do if (v153==0) then v154=v77[2];v155=v75[v154];v153=1;end if ((219<=2456) and (v153==(1 -0))) then v156=v75[v154 + 1 + 1 ];if ((3292==3292) and ((v156>(0 + 0)) or (4219==1150))) then if ((v155>v75[v154 + 1 + 0 ]) or (2989<=222)) then v69=v77[(1080 -(1036 + 37)) -4 ];else v75[v154 + (7 -4) ]=v155;end elseif ((1038<=2645) and (v155<v75[v154 + (2 -1) ])) then v69=v77[(1102 + 452) -(1126 + 425) ];else v75[v154 + (408 -(118 + 287)) ]=v155;end break;end end end elseif (v78==(46 -34)) then local v157=v77[3 -1 ];local v158,v159=v68(v75[v157](v13(v75,v157 + (1122 -(118 + 1003)) ,v70)));v70=(v159 + v157) -(2 -1) ;local v160=377 -(142 + 235) ;for v330=v157,v70 do local v331=0;while true do if (v331==0) then v160=v160 + (4 -3) ;v75[v330]=v158[v160];break;end end end else v75[v77[1 + 0 + 1 ]]=v61[v77[980 -(553 + 424) ]];end elseif (v78<=(37 -(65 -48))) then if ((2258>1241) and (v78<=(15 + 1))) then if ((41<4259) and (v78<=(14 + 0))) then local v124=v77[2 + 0 ];local v125=v75[v124];for v141=v124 + 1 ,v77[(6 -4) + 1 ] do v7(v125,v75[v141]);end elseif (v78==(7 + 2 + 6)) then v75[v77[2]]=v77[6 -3 ];else local v165=v77[1482 -(641 + 839) ];local v166=v75[v165];for v332=v165 + ((4 -2) -(689 -(364 + 324))) ,v70 do v7(v166,v75[v332]);end end elseif ((v78<=(40 -22)) or (1930<56) or (3230<2525)) then if (v78>(5 + 12)) then v75[v77[9 -7 ]][v77[916 -(910 + 3) ]]=v75[v77[(2075 -1318) -((573 -334) + 514) ]];else v75[v77[1 + 1 ]]=v75[v77[1332 -(797 + 177 + 355) ]][v75[v77[(12 -9) + 1 ]]];end elseif (v78>(7 + 12)) then if ((3333==3333) and  not v75[v77[4 -2 ]]) then v69=v69 + (2 -1) ;else v69=v77[1205 -(373 + 829) ];end else local v171=731 -(476 + (1939 -(1466 + 218))) ;local v172;local v173;local v174;while true do if (v171==(1131 -(369 + 761))) then v174=v75[v172] + v173 ;v75[v172]=v174;v171=2;end if (v171==(0 + 0)) then v172=v77[2 -0 ];v173=v75[v172 + (3 -1) ];v171=239 -(64 + 174) ;end if ((v171==(1 + 1)) or (2225==20)) then if ((v173>(0 -0)) or (2400>4083)) then if ((v174<=v75[v172 + (337 -(144 + 192)) ]) or (2745>4359)) then v69=v77[219 -(42 + 174) ];v75[v172 + 3 + 0 ]=v174;end elseif (v174>=v75[v172 + 1 + 0 ]) then v69=v77[2 + 1 ];v75[v172 + (1507 -(363 + 525 + 616)) ]=v174;end break;end end end elseif ((v78<=(1604 -(1183 + 397))) or (872>=3092)) then if ((4404>=3252) and (v78<=((105 -39) -44))) then if ((172<=1810) and (v78>(16 + 5))) then local v175=v77[2 + (1148 -(556 + 592)) ];local v176,v177=v68(v75[v175](v13(v75,v175 + (1976 -(1913 + 62)) ,v77[2 + 1 ])));v70=(v177 + v175) -(2 -1) ;local v178=1933 -(565 + 1368) ;for v333=v175,v70 do v178=v178 + ((8 -5) -2) ;v75[v333]=v176[v178];end else v75[v77[(2931 -(1249 + 19)) -(1477 + 66 + 118) ]]=v75[v77[3 -0 ]] * v77[4] ;end elseif ((v78==(22 + 1)) or (492>=4959)) then v75[v77[2]]= #v75[v77[859 -(564 + 264 + 28) ]];else v75[v77[2 -0 ]][v75[v77[(31 -23) -5 ]]]=v75[v77[308 -(244 + 60) ]];end elseif (v78<=(20 + 6)) then if (v78>(501 -(41 + 435))) then v75[v77[1003 -(938 + 63) ]]=v77[3 + (1086 -(686 + 400)) ] + v75[v77[1129 -(936 + 189) ]] ;else local v184=v77[2];v75[v184]=v75[v184]();end elseif ((1107>796) and (v78==(9 + 18))) then local v186=v77[1615 -(1565 + 48) ];local v187,v188=v68(v75[v186](v75[v186 + 1 + 0 ]));v70=(v188 + v186) -1 ;local v189=1138 -(782 + 356) ;for v336=v186,v70 do v189=v189 + (268 -(176 + 91)) ;v75[v336]=v187[v189];end elseif ((959==959) and (v75[v77[4 -(810 -(329 + 479)) ]]==v75[v77[5 -1 ]])) then v69=v69 + 1 ;else v69=v77[(1949 -(174 + 680)) -(975 + 117) ];end elseif ((v78<=(1917 -(157 + 1718))) or (756==2072)) then if ((1605<=4664) and (v78<=(29 + 6))) then if ((v78<=(109 -78)) or (245>=2204)) then if (v78<=(98 -69)) then v75[v77[1020 -(547 + 150 + 321) ]]=v77[3];elseif ((3162>=2069) and (v78==30)) then v75[v77[5 -3 ]]=v75[v77[5 -2 ]] -v77[8 -4 ] ;else local v191=0 + 0 ;local v192;while true do if (v191==0) then v192=v77[3 -1 ];do return v13(v75,v192,v70);end break;end end end elseif ((v78<=33) or (306>3081)) then if (v78>(85 -(282 -(73 + 156)))) then if (v75[v77[1229 -(2 + 320 + 905) ]]==v77[4]) then v69=v69 + (612 -(602 + 9)) ;else v69=v77[1192 -(449 + 740) ];end elseif ((1816==1816) and (v75[v77[874 -(826 + (157 -111)) ]]==v75[v77[951 -(245 + 702) ]])) then v69=v69 + ((5 -2) -2) ;else v69=v77[1 + 2 ];end elseif ((v78>(1932 -(260 + 1638))) or (3513<2706)) then local v193=(315 + 125) -(382 + 58) ;local v194;while true do if ((v193==(0 -0)) or (621>3100)) then v194=v77[2 + 0 ];v75[v194]=v75[v194]();break;end end else v75[v77[2]][v75[v77[5 -2 ]]]=v75[v77[11 -7 ]];end elseif (v78<=((1982 -(396 + 343)) -(902 + 303))) then if (v78<=(78 -(853 -(721 + 90)))) then local v128=0 -(0 + 0) ;local v129;while true do if (v128==(0 + 0 + (1477 -(29 + 1448)))) then v129=v77[1692 -(1121 + (1847 -1278)) ];v75[v129]=v75[v129](v13(v75,v129 + ((685 -(224 + 246)) -((1411 -(135 + 1254)) + 192)) ,v77[3]));break;end end elseif (v78>((2712 -1992) -(483 + 200))) then if ( not v75[v77[1465 -(1404 + 59) ]] or (1157>=4225)) then v69=v69 + ((9 -7) -(1 -0)) ;else v69=v77[3 -(0 + 0) ];end else local v197=765 -(468 + 297) ;local v198;local v199;while true do if ((562 -(334 + 228))==v197) then v198=v77[6 -4 ];v199=v75[v77[6 -3 ]];v197=(1 + 0) -0 ;end if ((2978<3639) and ((1 + (1527 -(389 + 1138)))==v197)) then v75[v198 + 1 + 0 ]=v199;v75[v198]=v199[v77[(477 -237) -(141 + 95) ]];break;end end end elseif ((3682>=2888) and (v78<=((133 -93) + 0))) then if (v78==(99 -(573 -(203 + 310)))) then local v200=0 -(1993 -(1238 + 755)) ;local v201;while true do if ((v200==(0 + 0 + 0)) or (4986==4138)) then v201=v77[5 -(577 -(102 + 472)) ];v75[v201](v75[v201 + 1 + 0 ]);break;end end else for v341=v77[2 + (1534 -(709 + 825)) ],v77[(7 -3) -1 ] do v75[v341]=nil;end end elseif (v78==(25 + 16)) then do return v75[v77[165 -(92 + (103 -32)) ]];end else v75[v77[2]]=v61[v77[2 + 0 + 1 ]];end elseif ((149<479) and (v78<=(81 -32))) then if (v78<=(810 -(574 + 191))) then if (v78<=(36 + 7)) then local v130=v77[4 -2 ];local v131={v75[v130](v13(v75,v130 + (850 -(254 + 595)) ,v70))};local v132=0;for v142=v130,v77[15 -11 ] do local v143=(70 + 56) -(55 + 71) ;while true do if (((1020>=567) and (v143==(0 -0))) or (2033<=224)) then v132=v132 + (1791 -(535 + 38 + 1217)) ;v75[v142]=v131[v132];break;end end end elseif ((v78==(121 -77)) or (1223==2011)) then local v204=(0 -0) + 0 ;local v205;while true do if (v204==(0 -0)) then v205=v77[941 -(714 + 225) ];v75[v205]=v75[v205](v13(v75,v205 + (2 -1) ,v70));break;end end else local v206=0;local v207;local v208;while true do if (v206==(0 -(833 -(171 + 662)))) then v207=v77[1 + 2 ];v208=v75[v207];v206=1;end if (v206==1) then for v462=v207 + (1 -0) ,v77[810 -(118 + 688) ] do v208=v208   .. v75[v462] ;end v75[v77[50 -(25 + 23) ]]=v208;break;end end end elseif ((v78<=((103 -(4 + 89)) + (1582 -(320 + 1225)))) or (733>2469)) then if ((2497==2497) and (v78>46)) then v75[v77[(688 + 1200) -(927 + 959) ]]=v75[v77[10 -7 ]]/v77[6 -2 ] ;elseif ((3901==3901) and v75[v77[(450 + 284) -(16 + 716) ]]) then v69=v69 + (1 -0) ;else v69=v77[3];end elseif ((4827>4695) and (v78>(145 -(11 + 86)))) then v75[v77[(1468 -(157 + 1307)) -2 ]][v77[288 -(175 + 110) ]]=v77[4];else local v212=0 -0 ;local v213;local v214;local v215;local v216;while true do if (v212==(0 + 0)) then v213=v77[(1868 -(821 + 1038)) -7 ];v214,v215=v68(v75[v213](v75[v213 + (1797 -((1956 -(28 + 1425)) + 1293)) ]));v212=2 -1 ;end if (v212==(2 + 0)) then for v463=v213,v70 do local v464=1061 -(810 + 251) ;while true do if ((3710>3065) and (201<415) and ((0 + (1993 -(941 + 1052)))==v464)) then v216=v216 + 1 + 0 ;v75[v463]=v214[v216];break;end end end break;end if (v212==(1 + 0 + (0 -0))) then v70=(v215 + v213) -(534 -((1557 -(822 + 692)) + 490)) ;v216=733 -((1014 -303) + 22) ;v212=7 -5 ;end end end elseif (v78<=(912 -(240 + 619))) then if (v78<=(2 + 11 + 38)) then if (v78==(79 -29)) then v75[v77[1 + 0 + 1 ]]=v77[1747 -(1344 + 400) ] + v75[v77[409 -((552 -(45 + 252)) + 150) ]] ;else v69=v77[3];end elseif (v78>(41 + 11)) then v75[v77[2 + 0 ]]=v75[v77[12 -9 ]] + v75[v77[12 -(13 -5) ]] ;else local v220=v66[v77[1742 -(404 + 1335) ]];local v221;local v222={};v221=v10({},{__index=function(v343,v344) local v345=406 -(183 + 223) ;local v346;while true do if ((2135<=2696) and (v345==(0 -0))) then v346=v222[v344];return v346[1 + 0 ][v346[1 + 1 ]];end end end,__newindex=function(v347,v348,v349) local v350=v222[v348];v350[1][v350[339 -(10 + 327) ]]=v349;end});for v352=1 + 0 ,v77[342 -(118 + 220) ] do local v353=0 + 0 ;local v354;while true do if ((v353==1) or (1742>4397)) then if ((v354[450 -(108 + (829 -488)) ]==(27 + 32)) or (133==1784)) then v222[v352-(4 -3) ]={v75,v354[3]};else v222[v352-(1 -0) ]={v60,v354[1 + 2 ]};end v74[ #v74 + (1820 -((1437 -857) + 1239)) ]=v222;break;end if (v353==0) then v69=v69 + (1027 -(834 + 192)) ;v354=v65[v69];v353=2 -1 ;end end end v75[v77[2 + (0 -0) ]]=v29(v220,v221,v61);end elseif ((3900>=1904) and (v78<=55)) then if (v78>(2 + 52)) then v75[v77[1 + (1 -0) ]]=v29(v66[v77[(5 + 2) -4 ]],nil,v61);else local v225=v77[2];local v226=v75[v225 + 2 + 0 ];local v227=v75[v225] + v226 ;v75[v225]=v227;if (v226>(1167 -(645 + 522))) then if (v227<=v75[v225 + 1 ]) then v69=v77[(114 + 1679) -((1504 -494) + 780) ];v75[v225 + 3 ]=v227;end elseif (v227>=v75[v225 + 1 ]) then v69=v77[3 + 0 + 0 ];v75[v225 + (14 -11) ]=v227;end end elseif ((v78==(164 -108)) or (7>=310)) then v75[v77[(3850 -2012) -(1045 + 791) ]]= #v75[v77[7 -4 ]];else local v230=0 -(1963 -(556 + 1407)) ;local v231;while true do if ((4992>286) and (v230==(505 -(351 + 154)))) then v231=v77[1576 -(1281 + 293) ];do return v75[v231](v13(v75,v231 + (267 -(28 + (1444 -(741 + 465)))) ,v77[6 -3 ]));end break;end end end elseif (v78<=(1645 -(1381 + 178))) then if (v78<=(67 + 4)) then if (v78<=(52 + 12)) then if (v78<=60) then if ((v78<=(25 + 33)) or (1724==909)) then do return;end elseif (v78>59) then local v232=v77[6 -4 ];local v233,v234=v68(v75[v232](v13(v75,v232 + 1 ,v70)));v70=(v234 + v232) -(1 + 0) ;local v235=470 -(381 + (554 -(170 + 295))) ;for v355=v232,v70 do local v356=0 + 0 ;while true do if ((1282<1421) and ((v356==(0 + 0)) or (2561==3893))) then v235=v235 + 1 + 0 ;v75[v355]=v233[v235];break;end end end else v75[v77[2 -0 ]]=v75[v77[1159 -(1074 + 82) ]];end elseif (v78<=((209 -74) -73)) then if (v78==61) then local v238=v77[1786 -(197 + 17 + 1570) ];local v239=v77[4];local v240=v238 + (1457 -(990 + 465)) ;local v241={v75[v238](v75[v238 + 1 + 0 ],v75[v240])};for v357=1 + 0 ,v239 do v75[v240 + v357 ]=v241[v357];end local v242=v241[3 -(2 + 0) ];if v242 then local v404=1726 -(1668 + 58) ;while true do if ((4876>=4337) and (((402 + 224) -((816 -(300 + 4)) + 114))==v404)) then v75[v240]=v242;v69=v77[(2 + 5) -4 ];break;end end else v69=v69 + (1 -(0 -0)) ;end elseif ((4362>=1421) and (v75[v77[6 -(366 -(112 + 250)) ]]<v77[2 + 2 ])) then v69=v69 + 1 + 0 ;else v69=v77[3 + 0 ];end elseif ((75<=3546) and (v78>(212 -(85 + 64)))) then local v243=v75[v77[4]];if  not v243 then v69=v69 + (1995 -(44 + 65 + 1885)) ;else v75[v77[2]]=v243;v69=v77[(2702 -(957 + 273)) -(1269 + 200) ];end else v75[v77[3 -1 ]]=v75[v77[3]][v75[v77[819 -(98 + (1796 -1079)) ]]];end elseif (v78<=(893 -(802 + 24))) then if ((4005>=3005) and (2680<=3418) and (v78<=((30 + 82) -(19 + 28)))) then local v133=v77[2];do return v75[v133](v13(v75,v133 + (1 -0) ,v77[3]));end elseif ((v78==(10 + 56)) or (4781<=4448)) then v75[v77[2 + 0 + 0 ]]=v60[v77[1 + 2 ]];else local v248=0 + (0 -0) ;local v249;local v250;local v251;while true do if (v248==((5 -3) -(1 + 0))) then v251=v77[9 -6 ];for v474=1 + 0 ,v251 do v250[v474]=v75[v249 + v474 ];end break;end if (v248==(0 + 0)) then v249=v77[2 + 0 ];v250=v75[v249];v248=1 + 0 ;end end end elseif ((v78<=69) or (4288<2876)) then if ((2462>=1147) and (v78==(32 + 36))) then local v252=v77[1435 -((2434 -1637) + 636) ];local v253=v75[v252];local v254=v77[14 -11 ];for v360=4 -(3 + 0) ,v254 do v253[v360]=v75[v252 + v360 ];end else v75[v77[1621 -(1427 + 192) ]]=v29(v66[v77[3]],nil,v61);end elseif ((1317>172) and ((v78>(1850 -(389 + 1391))) or (4914<2480))) then local v256=v77[1 + 1 ];local v257,v258=v68(v75[v256](v13(v75,v256 + (2 -1) ,v77[2 + 1 ])));v70=(v258 + v256) -(1 + 0) ;local v259=0 + 0 + 0 ;for v363=v256,v70 do v259=v259 + (327 -(192 + 134)) ;v75[v363]=v257[v259];end else local v260=(2904 -1628) -(316 + 960) ;local v261;while true do if (v260==(0 + 0 + 0)) then v261=v77[(953 -(783 + 168)) + 0 ];v75[v261](v13(v75,v261 + 1 ,v77[3]));break;end end end elseif (v78<=78) then if ((4791==4791) and ((v78<=(69 + 5)) or (1559==1240))) then if ((566==566) and (v78<=(275 -203))) then v75[v77[6 -4 ]]=v60[v77[554 -(83 + 468) ]];elseif (v78==(1879 -(1202 + 604))) then for v366=v77[9 -7 ],v77[3 + 0 ] do v75[v366]=nil;end else local v262=(0 + 0) -0 ;local v263;while true do if (v262==(0 -0)) then v263=v77[327 -(45 + 280) ];v75[v263]=v75[v263](v75[v263 + (312 -(309 + 2)) + 0 ]);break;end end end elseif (v78<=76) then if ((3988>1261) and (v78>((1480 -(1001 + 413)) + 9))) then v75[v77[2]]=v75[v77[3]]/v77[4] ;else v75[v77[1 + 1 ]]=v75[v77[3]] + v77[3 + 1 ] ;end elseif (v78>77) then v75[v77[1 + 1 ]]=v75[v77[3]]%v75[v77[6 -2 ]] ;else local v267=v77[2];local v268={v75[v267](v75[v267 + 1 + 0 ])};local v269=1772 -(1733 + 39) ;for v368=v267,v77[10 -6 ] do local v369=0;while true do if ((3921>=3009) and (v369==(1034 -(125 + 909)))) then v269=v269 + (1949 -(1096 + 852)) ;v75[v368]=v268[v269];break;end end end end elseif (v78<=(37 + 45)) then if ((2240<=3616) and (2063>=1648) and (v78<=(114 -34))) then if ((v78==(77 + 2)) or (3988<3947)) then local v270=v77[514 -(409 + 103) ];local v271=v77[240 -((141 -95) + (423 -233)) ];local v272=v270 + ((32 + 65) -(51 + 44)) ;local v273={v75[v270](v75[v270 + (1318 -(1114 + 203)) ],v75[v272])};for v370=727 -((765 -537) + 498) ,v271 do v75[v272 + v370 ]=v273[v370];end local v274=v273[1 + 0 ];if ((1066>=452) and v274) then v75[v272]=v274;v69=v77[2 + 1 ];else v69=v69 + (664 -(174 + 489)) ;end else local v275=v77[2];v75[v275]=v75[v275](v13(v75,v275 + (2 -1) ,v70));end elseif (v78>((1360 + 626) -(830 + 1075))) then local v277=v77[526 -(303 + (1339 -(628 + 490))) ];do return v13(v75,v277,v277 + v77[3] );end else local v278=v66[v77[(2154 -(244 + 638)) -(231 + 1038) ]];local v279;local v280={};v279=v10({},{__index=function(v373,v374) local v375=0 + 0 ;local v376;while true do if (v375==0) then v376=v280[v374];return v376[1][v376[1164 -(171 + 991) ]];end end end,__newindex=function(v377,v378,v379) local v380=0 -0 ;local v381;while true do if ((0 -0)==v380) then v381=v280[v378];v381[2 -1 ][v381[2 + 0 ]]=v379;break;end end end});for v382=3 -2 ,v77[4] do v69=v69 + (2 -1) ;local v383=v65[v69];if ((4644==4644) and (4974>=2655) and (v383[1 -(774 -(431 + 343)) ]==(182 -123))) then v280[v382-(1249 -((804 -(627 + 66)) + 1137)) ]={v75,v383[3]};else v280[v382-1 ]={v60,v383[1 + 2 ]};end v74[ #v74 + (2 -1) ]=v280;end v75[v77[2 + (0 -0) ]]=v29(v278,v279,v61);end elseif (v78<=(855 -(326 + 445))) then if ((1323>1271) and (v78>((286 + 76) -279))) then v75[v77[4 -(1 + 1) ]]=v75[v77[6 -3 ]]%v77[715 -((2225 -(556 + 1139)) + 181) ] ;else v75[v77[(2630 -1747) -((1216 -(512 + 90)) + (282 -(6 + 9))) ]]=v75[v77[35 -(19 + 13) ]][v77[6 -2 ]];end elseif ((1619>1457) and (v78==85)) then if (v75[v77[4 -2 ]]<v77[(3 + 8) -7 ]) then v69=v69 + 1 + 0 ;else v69=v77[3];end elseif ((v75[v77[3 -1 ]]==v77[7 -3 ]) or (2860<1808)) then v69=v69 + (1813 -(1293 + 519)) ;else v69=v77[5 -(2 + 0) ];end elseif ((v78<=(261 -161)) or (739>=1809)) then if (v78<=((346 -(28 + 141)) -(1990 -(1665 + 241)))) then if (v78<=((149 + 234) -(362 -68))) then if ((v78<=((145 + 59) -117)) or (2721<=907)) then v75[v77[2 + 0 ]][v75[v77[(1318 -(486 + 831)) + 2 ]]]=v77[9 -5 ];elseif (v78==(21 + 67)) then local v285=0;local v286;while true do if ((4437>=3031) and (v285==(0 + 0))) then v286=v77[2 + 0 ];do return v13(v75,v286,v70);end break;end end else v69=v77[(2859 -1760) -(709 + 387) ];end elseif ((v78<=(808 -(373 + 344))) or (4470<2949)) then if ((1539<=4148) and ((v78==(1948 -(673 + 1185))) or (1580==2426))) then v75[v77[5 -3 ]][v75[v77[3]]]=v77[2 + 2 ];else local v290=v77[2];local v291=v75[v290];local v292=v75[v290 + (6 -4) ];if (v292>0) then if ((v291>v75[v290 + ((1 + 0) -0) ]) or (3711==503)) then v69=v77[3 + 0 ];else v75[v290 + 3 ]=v291;end elseif (v291<v75[v290 + 1 ]) then v69=v77[3];else v75[v290 + 3 ]=v291;end end elseif ((v78>(69 + 23)) or (420==4318)) then local v293=v77[2];local v294={v75[v293](v75[v293 + 1 + 0 ])};local v295=0 -(0 -0) ;for v385=v293,v77[7 -3 ] do v295=v295 + ((3182 -1301) -(446 + 271 + 1163)) ;v75[v385]=v294[v295];end else v75[v77[1285 -(1040 + 243) ]]=v75[v77[1102 -(35 + 1064) ]] + v75[v77[11 -7 ]] ;end elseif ((v78<=(1943 -(407 + 152 + 1288))) or (434>3050)) then if (v78<=(2025 -(609 + (4179 -2857)))) then local v138=v77[456 -(13 + (943 -502)) ];v75[v138]=v75[v138](v75[v138 + (3 -2) ]);elseif ((v78==(248 -153)) or (3054<1683)) then local v297=v77[2];v75[v297]=v75[v297](v13(v75,v297 + (4 -(1266 -(668 + 595))) ,v77[1 + 2 ]));else v75[v77[1 + 1 ]]=v75[v77[3]] * v77[1240 -(298 + 938) ] ;end elseif (v78<=98) then if ((47<2706) and (v78>(352 -255))) then local v300=0 + 0 ;local v301;local v302;local v303;while true do if (v300==0) then v301=v77[2];v302={v75[v301](v13(v75,v301 + (2 -1) ,v70))};v300=1 + 0 ;end if (v300==(1 -0)) then v303=0;for v486=v301,v77[3 + 0 + 1 + 0 ] do local v487=0 + 0 ;while true do if (((0 + 0)==v487) or (4158<=33)) then v303=v303 + 1 ;v75[v486]=v302[v303];break;end end end break;end end else v75[v77[(1261 -(233 + 1026)) + 0 ]]=v77[3]~=(0 + 0) ;end elseif (v78>(532 -((443 -(23 + 267)) + (1946 -(636 + 1030))))) then local v305=v77[5 -3 ];v75[v305](v75[v305 + 1 + 0 ]);else v75[v77[1 + 0 + 1 ]]={};end elseif (v78<=107) then if ((1519>=580) and (v78<=103)) then if (v78<=((1997 -(1129 + 815)) + 48)) then v75[v77[2]]={};elseif ((v78>(93 + 9 + 0)) or (99>4744) or (3110==4177)) then local v307=0 + 0 ;local v308;local v309;while true do if ((4341==4341) and (v307==(1 -0))) then v75[v308 + 1 + 0 ]=v309;v75[v308]=v309[v77[671 -(89 + 578) ]];break;end if ((4200>2076) and (v307==(0 + 0))) then v308=v77[3 -1 ];v309=v75[v77[1 + 2 ]];v307=1050 -(572 + 477) ;end end else local v310=v75[v77[1 + (390 -(371 + 16)) ]];if ( not v310 or (601>=2346)) then v69=v69 + 1 + 0 ;else local v412=0 + 0 ;while true do if ((255<=1596) and (v412==(86 -(84 + 1 + 1)))) then v75[v77[2 -0 ]]=v310;v69=v77[3 + 0 ];break;end end end end elseif ((3970<=4354) and (v78<=105)) then if (v78==(946 -(497 + (566 -(55 + 166))))) then if (v77[1 + 1 + 0 ]<v75[v77[1 + 0 + 3 ]]) then v69=v69 + (1334 -(605 + 728)) ;else v69=v77[(5 -2) + 0 ];end else v75[v77[3 -(3 -2) ]]=v75[v77[1 + 2 ]]%v75[v77[14 -(128 -(88 + 30)) ]] ;end elseif ((v78==((867 -(720 + 51)) + 10)) or (4433<1635) or (1542<208)) then local v312=0;local v313;local v314;while true do if (v312==(2 -1)) then for v488=1 + 0 , #v74 do local v489=(1867 -1378) -(457 + 32) ;local v490;while true do if ((v489==0) or (4300<3244)) then v490=v74[v488];for v519=0, #v490 do local v520=v490[v519];local v521=v520[1 + 0 ];local v522=v520[(1701 -(36 + 261)) -(832 + 570) ];if (((v521==v75) and (v522>=v313)) or (3534>4677)) then v314[v522]=v521[v522];v520[(2 -1) + (0 -0) ]=v314;end end break;end end end break;end if (v312==0) then v313=v77[1 + 1 ];v314={};v312=3 -2 ;end end else v75[v77[1 + 1 ]][v77[799 -(588 + (1984 -(421 + 1355))) ]]=v77[6 -2 ];end elseif (v78<=111) then if (v78<=(293 -184)) then if (v78>(1908 -(884 + 916))) then local v317=0 -(1368 -(34 + 1334)) ;local v318;local v319;while true do if ((1612<=2926) and (((0 + 0)==v317) or (4859<2999))) then v318=v77[2 + 0 ];v319=v75[v318];v317=(1737 -(286 + 797)) -((848 -616) + 421) ;end if ((v317==((727 + 1163) -(1569 + (759 -(397 + 42))))) or (2006<=540)) then for v491=v318 + 1 + 0 + 0 ,v70 do v7(v319,v75[v491]);end break;end end else local v320=v77[3];local v321=v75[v320];for v388=v320 + 1 + 0 ,v77[13 -(7 + 2) ] do v321=v321   .. v75[v388] ;end v75[v77[(1407 -(24 + 776)) -(316 + 289) ]]=v321;end elseif (v78>(287 -177)) then local v323=v77[1 + 1 ];local v324={};for v389=1454 -(666 + 787) , #v74 do local v390=425 -(360 + 65) ;local v391;while true do if (v390==((0 -0) + (1283 -(1035 + 248)))) then v391=v74[v389];for v497=(1039 -(222 + 563)) -(79 + 175) , #v391 do local v498=v391[v497];local v499=v498[1 -0 ];local v500=v498[2 + 0 ];if (((v499==v75) and (v500>=v323)) or (2412==4677)) then local v517=0 -0 ;while true do if ((0 -0)==v517) then v324[v500]=v499[v500];v498[900 -(503 + 396) ]=v324;break;end end end end break;end end end else v75[v77[2]]=v77[3]~=0 ;end elseif (v78<=(294 -(92 + 89))) then if ((v78==(216 -104)) or (4897<=1972)) then local v326=0;local v327;while true do if ((3101<=3584) and (((21 -(20 + 1)) + 0)==v326)) then v327=v77[2 + 0 ];v75[v327](v13(v75,v327 + (3 -2) ,v77[1 + (3 -1) ]));break;end end else do return v75[v77[4 -2 ]];end end elseif (v78>(100 + 14)) then local v328=v77[1 + 1 ];v75[v328](v13(v75,v328 + (2 -1) ,v70));else v75[v77[1 + 1 ]]=v75[v77[4 -1 ]]%v77[3 + 1 ] ;end v69=v69 + (1245 -((804 -(134 + 185)) + 759)) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);